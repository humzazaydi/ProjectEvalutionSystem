@model IEnumerable<ProjectEvalutionSystem.Models.Student>

@{
    ViewBag.Title = "Index";
}
<div class="card card-custom gutter-b">
    <div class="card-header border-0">
        <div class="card-title">
            <span class="card-icon">
                <i class="flaticon2-chat-1 text-primary"></i>
            </span>
            <h3 class="card-label text-primary">
                Student's Grid View
            </h3>
        </div>
        <div class="card-toolbar">
            <a href="/Students/Create" class="btn btn-sm btn-primary">
                <i class="flaticon2-cube"></i> Add Student
            </a>
        </div>
    </div>
    <div class="separator separator-solid separator-white opacity-20"></div>
    <div class="card-body">
        <div class="container">
            <table class="table table-bordered">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.FullName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmailAddress)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Username)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IsActive)
                    </th>
                    <th>
                        Actions
                    </th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmailAddress)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Username)
                        </td>
                        <td>
                            @{
                                if (Convert.ToBoolean(item.IsActive) != null && Convert.ToBoolean(item.IsActive))
                                {
                                    <span class="label label-success label-inline mr-2">Active</span>
                                }
                                else
                                {
                                    <span class="label label-danger label-inline mr-2">In Active</span>
                                }

                            }
                        </td>
                        <td>
                            <div class="btn-toolbar mb-3" role="toolbar" aria-label="Toolbar with button groups">
                                <div class="btn-group mr-2" role="group" aria-label="First group">
                                    <a href="/Students/Edit/@item.ID.ToString()"><button type="button" class="btn btn-outline-warning m-1"><i class="la la-pencil"></i> Update</button></a>
                                    <a href="/Students/Delete/@item.ID.ToString()"><button type="button" class="btn btn-outline-danger m-1"><i class="la la-trash"></i> Trash</button></a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }

            </table>
        </div>
    </div>
</div>
@section scripts{
    <script src="~/Scripts/jquery.signalR-2.4.3.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.signalR-2.4.3.js"></script>
    <script>
        var url = 'http://localhost:44332/signalr';

        // start connection on a different port
        $.connection(url).start().done(function () {
            var SignalHub = $.connection.signalHub;

            $.connection.hub.logging = true;
            $.connection.hub.error(function () {
                console.error('An error occurred with the hub connection.');
            });

            // seems to be a bug in CORs signalR client library that
            // the URL host in the connection object is not passed through to the hub
            $.connection.hub.url = url;

            SignalHub.client.DataSet = function (response) {
                alert(response);
            };

            // since you have set the `$.connection.hub.url` this now works
            $.connection.hub.start(function () {
                console.log('Connection Established.');
            });

        });
    </script>
}

